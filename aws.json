{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Transform": "AWS::LanguageExtensions",
	"Parameters": {
		"UnisonSyncSubnetIds": {
			"Type": "CommaDelimitedList",
			"Description": "The subnets in which EFS mount points are created. List all subnets where EC2 can launch its VMs. For technical reasons, only the numeric part without the leading 'subnet-' should be given.",
			"Default": "0969ddae9b7dda4e4, 049b25801a7f8ca33, 02c085b1c5479951e"
		}
	},
	"Resources": {
		"UnisonSyncEC2SecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": {
					"Fn::Sub": "${AWS::StackName}-ec2"
				},
				"GroupDescription": "ssh access allowed via port 22 from anywhere",
				"SecurityGroupIngress": [
					{
						"CidrIp": "0.0.0.0/0",
						"Description": "ssh access from anywhere",
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22
					},
					{
						"CidrIpv6": "::/0",
						"Description": "ssh access from anywhere",
						"IpProtocol": "tcp",
						"FromPort": 22,
						"ToPort": 22
					}
				]
			}
		},
		"UnisonSyncEFSSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupName": {
					"Fn::Sub": "${AWS::StackName}-efs"
				},
				"GroupDescription": {
					"Fn::Sub": "EFS access allowed from ${AWS::StackName} EC2 instances"
				},
				"SecurityGroupIngress": [
					{
						"IpProtocol": "tcp",
						"FromPort": 2049,
						"ToPort": 2049,
						"SourceSecurityGroupId": {
							"Fn::GetAtt": [
								"UnisonSyncEC2SecurityGroup",
								"GroupId"
							]
						}
					}
				]
			}
		},
		"UnisonSyncFileSystem": {
			"Type": "AWS::EFS::FileSystem",
			"Properties": {
				"FileSystemTags": [
					{
						"Key": "Name",
						"Value": {
							"Ref": "AWS::StackName"
						}
					}
				],
				"Encrypted": true,
				"LifecyclePolicies": [],
				"BackupPolicy": {
					"Status": "ENABLED"
				}
			}
		},
		"Fn::ForEach::UnisonSyncSubnets": [
			"SubnetId",
			{
				"Ref": "UnisonSyncSubnetIds"
			},
			{
				"UnisonSyncMountTarget${SubnetId}": {
					"Type": "AWS::EFS::MountTarget",
					"Properties": {
						"FileSystemId": {
							"Fn::GetAtt": [
								"UnisonSyncFileSystem",
								"Arn"
							]
						},
						"SubnetId": {
							"Fn::Sub": "subnet-${SubnetId}"
						},
						"SecurityGroups": [
							{
								"Fn::GetAtt": [
									"UnisonSyncEFSSecurityGroup",
									"GroupId"
								]
							}
						]
					}
				}
			}
		],
		"UnisonSyncLaunchTemplate": {
			"Type": "AWS::EC2::LaunchTemplate",
			"Properties": {
				"LaunchTemplateName": {
					"Ref": "AWS::StackName"
				},
				"LaunchTemplateData": {
					"DisableApiTermination": false,
					"InstanceInitiatedShutdownBehavior": "terminate",
					"InstanceType": "t4g.nano",
					"KeyName": {
						"Ref": "AWS::StackName"
					},
					"UserData": {
						"Fn::Base64": {
							"Fn::Join": [
								"\n",
								[
									"#cloud-config",
									"bootcmd:",
									" - yum --assumeyes --quiet install nfs-utils",
									{
										"Fn::Sub": " - [ mount, -t, nfs, -o, \"nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport\", ${UnisonSyncFileSystem.FileSystemId}.efs.${AWS::Region}.${AWS::URLSuffix}:/, /mnt ]"
									},
									"",
									"groups:",
									" - unison",
									" - admin",
									" - staff",
									"",
									"users:",
									" - default",
									" - name: unison-admin",
									"   primary_group: unison",
									"   sudo: ALL = (ALL) NOPASSWD:ALL",
									" - name: unison-sync",
									"   primary_group: unison",
									"   groups: admin, staff",
									"   sudo: ALL = (root) NOPASSWD:/usr/bin/systemctl poweroff -qf",
									"",
									"runcmd:",
									" - [ ln, -sf, /mnt/config/shell/rc, /home/unison-admin/.bashrc ]",
									" - [ ln, -sf, /mnt/config/shell/rc, /home/unison-sync/.bashrc ]",
									"",
									"write_files:",
									" - path: /etc/ssh/sshd_config.d/99-sync-restrict.conf",
									"   permissions: 0o600",
									"   content: |",
									"      Match User unison-sync",
									"      ForceCommand /usr/local/bin/unison",
									" - path: /usr/local/bin/unison",
									"   permissions: 0o755",
									"   content: |",
									"      #!/bin/sh -e",
									"      ",
									"      # switch to restricted user",
									"      test \"$USER\" = unison-sync || exec sudo -u unison-sync --set-home \"$0\" \"$@\"",
									"      cd \"$HOME\"",
									"      # last leaving client shuts down machine",
									"      trap 'rm -f unison-$PPID ; sleep 300 ; test \"$(ls unison* 2> /dev/null)\" || sudo systemctl poweroff -qf' EXIT HUP INT PIPE TERM",
									"      # create client marker file",
									"      touch unison-$PPID",
									"      ",
									"      # launch unison",
									"      if test $# = 0 ; then set -- -server __new-rpc-mode ; fi",
									"      export UNISON=/mnt/unison",
									"      export HOME=/mnt/data",
									"      export UNISONLOCALHOSTNAME=unison-sync",
									"      /mnt/bin/unison \"$@\"",
									"      ",
									"      # sanitize file groups",
									"      find /mnt/data/shared-common /mnt/data/shared-darwin ! -group admin ! -group root -print0 | xargs --null --no-run-if-empty chgrp -h admin",
									"      find /mnt/data -group unison ! -path /mnt/data/shared-\\* -print0 | xargs --null --no-run-if-empty chgrp -h staff",
									""
								]
							]
						}
					},
					"BlockDeviceMappings": [
						{
							"DeviceName": "/dev/xvda",
							"Ebs": {
								"DeleteOnTermination": true,
								"VolumeType": "gp3"
							}
						}
					],
					"CreditSpecification": {
						"CpuCredits": "standard"
					},
					"Monitoring": {
						"Enabled": false
					},
					"NetworkInterfaces": [
						{
							"AssociatePublicIpAddress": true,
							"DeleteOnTermination": true,
							"DeviceIndex": 0,
							"Groups": [
								{
									"Fn::GetAtt": [
										"UnisonSyncEC2SecurityGroup",
										"GroupId"
									]
								}
							]
						}
					],
					"Placement": {
						"Tenancy": "default"
					},
					"TagSpecifications": [
						{
							"ResourceType": "instance",
							"Tags": [
								{
									"Value": "<undefined>",
									"Key": "unison-sync"
								}
							]
						}
					]
				}
			}
		},
		"UnisonSyncUser": {
			"Type": "AWS::IAM::User",
			"Properties": {
				"UserName": {
					"Ref": "AWS::StackName"
				},
				"Policies": [
					{
						"PolicyName": {
							"Ref": "AWS::StackName"
						},
						"PolicyDocument": {
							"Version": "2012-10-17",
							"Statement": [
								{
									"Effect": "Allow",
									"Action": "ec2:DescribeInstances",
									"Resource": "*"
								},
								{
									"Effect": "Allow",
									"Action": "ec2:DescribeImages",
									"Resource": "*"
								},
								{
									"Effect": "Allow",
									"Action": "ec2:RunInstances",
									"Resource": "*",
									"Condition": {
										"StringEquals": {
											"ec2:LaunchTemplate": {
												"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:launch-template/${UnisonSyncLaunchTemplate}"
											}
										},
										"Bool": {
											"ec2:IsLaunchTemplateResource": "true"
										}
									}
								},
								{
									"Effect": "Allow",
									"Action": "ec2:RunInstances",
									"Resource": {
										"Fn::Sub": "arn:aws:ec2:${AWS::Region}::image/ami-*"
									},
									"Condition": {
										"StringEquals": {
											"ec2:Owner": "amazon"
										}
									}
								},
								{
									"Effect": "Allow",
									"Action": "ec2:RunInstances",
									"Resource": {
										"Fn::Sub": "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/*"
									}
								},
								{
									"Effect": "Allow",
									"Action": "ec2:CreateTags",
									"Resource": "*",
									"Condition": {
										"StringEquals": {
											"ec2:CreateAction": "RunInstances"
										},
										"ForAllValues:StringEquals": {
											"aws:TagKeys": [
												"unison-sync"
											]
										}
									}
								},
								{
									"Effect": "Allow",
									"Action": "ec2:TerminateInstances",
									"Resource": "*",
									"Condition": {
										"StringLike": {
											"ec2:ResourceTag/unison-sync": "*"
										}
									}
								}
							]
						}
					}
				]
			}
		}
	}
}
